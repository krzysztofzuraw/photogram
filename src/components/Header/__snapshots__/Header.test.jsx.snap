// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header Component renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <span
        className="header-wrapper"
>
        <span
                className="header-text"
        >
                Photogram
        </span>
        <button
                className="form-button"
                onClick={[Function]}
        >
                Refresh
        </button>
</span>,
      "className": "header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="header-text"
>
            Photogram
</span>,
          <button
            className="form-button"
            onClick={[Function]}
>
            Refresh
</button>,
        ],
        "className": "header-wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Photogram",
            "className": "header-text",
          },
          "ref": null,
          "rendered": "Photogram",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Refresh",
            "className": "form-button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Refresh",
          "type": "button",
        },
      ],
      "type": "span",
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <span
          className="header-wrapper"
>
          <span
                    className="header-text"
          >
                    Photogram
          </span>
          <button
                    className="form-button"
                    onClick={[Function]}
          >
                    Refresh
          </button>
</span>,
        "className": "header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="header-text"
>
              Photogram
</span>,
            <button
              className="form-button"
              onClick={[Function]}
>
              Refresh
</button>,
          ],
          "className": "header-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Photogram",
              "className": "header-text",
            },
            "ref": null,
            "rendered": "Photogram",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Refresh",
              "className": "form-button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Refresh",
            "type": "button",
          },
        ],
        "type": "span",
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
