// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Photo Component renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Photo
    commentsSum={0}
    handleLike={[Function]}
    id="1"
    likesSum={0}
    style={Object {}}
    url="https"
    user={
        Object {
            "links": Object {
              "self": "https",
            },
            "name": "Tom",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="photo-header"
>
          <UserIcon
                    height={30}
                    width={30}
          />
          <a
                    className="photo-author"
                    href="https"
          >
                    Tom
          </a>
</div>,
        <Link
          replace={false}
          to="/photo/1"
>
          <img
                    alt="placeholder"
                    className="photo-img"
                    src="https"
          />
</Link>,
        <div
          className="photo-meta"
>
          <HearthIcon
                    height={30}
                    onClickHandler={[Function]}
                    width={30}
          />
          <span />
          <ConversationIcon
                    height={30}
                    width={30}
          />
          <span />
</div>,
      ],
      "className": "photo",
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <UserIcon
              height={30}
              width={30}
/>,
            <a
              className="photo-author"
              href="https"
>
              Tom
</a>,
          ],
          "className": "photo-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "height": 30,
              "width": 30,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Tom",
              "className": "photo-author",
              "href": "https",
            },
            "ref": null,
            "rendered": "Tom",
            "type": "a",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <img
            alt="placeholder"
            className="photo-img"
            src="https"
/>,
          "replace": false,
          "to": "/photo/1",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "placeholder",
            "className": "photo-img",
            "src": "https",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <HearthIcon
              height={30}
              onClickHandler={[Function]}
              width={30}
/>,
            <span />,
            <ConversationIcon
              height={30}
              width={30}
/>,
            <span />,
          ],
          "className": "photo-meta",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "height": 30,
              "onClickHandler": [Function],
              "width": 30,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": 0,
            },
            "ref": null,
            "rendered": 0,
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "height": 30,
              "width": 30,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": 0,
            },
            "ref": null,
            "rendered": 0,
            "type": "span",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="photo-header"
>
            <UserIcon
                        height={30}
                        width={30}
            />
            <a
                        className="photo-author"
                        href="https"
            >
                        Tom
            </a>
</div>,
          <Link
            replace={false}
            to="/photo/1"
>
            <img
                        alt="placeholder"
                        className="photo-img"
                        src="https"
            />
</Link>,
          <div
            className="photo-meta"
>
            <HearthIcon
                        height={30}
                        onClickHandler={[Function]}
                        width={30}
            />
            <span />
            <ConversationIcon
                        height={30}
                        width={30}
            />
            <span />
</div>,
        ],
        "className": "photo",
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <UserIcon
                height={30}
                width={30}
/>,
              <a
                className="photo-author"
                href="https"
>
                Tom
</a>,
            ],
            "className": "photo-header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "height": 30,
                "width": 30,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Tom",
                "className": "photo-author",
                "href": "https",
              },
              "ref": null,
              "rendered": "Tom",
              "type": "a",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <img
              alt="placeholder"
              className="photo-img"
              src="https"
/>,
            "replace": false,
            "to": "/photo/1",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "placeholder",
              "className": "photo-img",
              "src": "https",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <HearthIcon
                height={30}
                onClickHandler={[Function]}
                width={30}
/>,
              <span />,
              <ConversationIcon
                height={30}
                width={30}
/>,
              <span />,
            ],
            "className": "photo-meta",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "height": 30,
                "onClickHandler": [Function],
                "width": 30,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": 0,
              },
              "ref": null,
              "rendered": 0,
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "height": 30,
                "width": 30,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": 0,
              },
              "ref": null,
              "rendered": 0,
              "type": "span",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
